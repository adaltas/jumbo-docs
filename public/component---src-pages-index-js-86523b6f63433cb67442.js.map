{"version":3,"sources":["webpack:///./src/components/jumbo-shell-image.js","webpack:///./src/pages/index.js","webpack:///./src/components/site-layout.js","webpack:///./src/pages/index.module.css"],"names":["Image","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2449412146","Content","Layout","IndexPage","_ref","site_layout","className","indexStyles","content","shellImage","jumbo_shell_image","allMarkdownRemark","edges","map","_ref2","node","frontmatter","title","es_button","Footer","SiteLayout","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","site","siteMetadata","meta","name","lang","antd__WEBPACK_IMPORTED_MODULE_5__","mainStyles","layout","_main_header__WEBPACK_IMPORTED_MODULE_7__","antd__WEBPACK_IMPORTED_MODULE_6__","offsetBottom","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","isRequired","module","exports"],"mappings":"0LA+BeA,EAhBD,kBACZC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAKO,MAAOF,EAAKG,iBAAiBC,gBAAgBF,SAZpEF,KAAAK,+DCPMC,EAAYC,IAAZD,QAqBKR,EAAK,YAkBHU,UArCG,SAAAC,GAAA,IAAGT,EAAHS,EAAGT,KAAH,OAChBN,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACU,EAAD,CAASK,UAAWC,IAAYC,SAC9BnB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,OAAKe,UAAWC,IAAYE,YAC1BpB,EAAAC,EAAAC,cAACmB,EAAD,OAEFrB,EAAAC,EAAAC,cAAA,UACGI,EAAKgB,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChC1B,EAAAC,EAAAC,cAAA,UAAKwB,EAAKC,YAAYC,UAG1B5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,mLCdEC,EAAWjB,IAAXiB,OAEFC,EAAa,SAAAhB,GAAA,IAAGiB,EAAHjB,EAAGiB,SAAH,OACjBC,EAAAhC,EAAAC,cAACgC,EAAA,YAAD,CACE9B,MAAK,aASLC,OAAQ,SAAAC,GAAI,OACV2B,EAAAhC,EAAAC,cAAA+B,EAAAhC,EAAAkC,SAAA,KACEF,EAAAhC,EAAAC,cAACkC,EAAAnC,EAAD,CACE2B,MAAOtB,EAAK+B,KAAKC,aAAaV,MAC9BW,KAAM,CACJ,CAAEC,KAAM,cAAerB,QAAS,UAChC,CAAEqB,KAAM,WAAYrB,QAAS,uBAG/Bc,EAAAhC,EAAAC,cAAA,QAAMuC,KAAK,QAEbR,EAAAhC,EAAAC,cAACwC,EAAA,EAAD,CAAQzB,UAAW0B,IAAWC,QAC5BX,EAAAhC,EAAAC,cAAC2C,EAAA,EAAD,MACAZ,EAAAhC,EAAAC,cAACwC,EAAA,EAAD,KAASV,GACTC,EAAAhC,EAAAC,cAAC4C,EAAA,EAAD,CAAOC,aAAc,GACnBd,EAAAhC,EAAAC,cAAC4B,EAAD,mBAzBVxB,KAAA0C,KAiCFjB,EAAWkB,UAAY,CACrBjB,SAAUkB,IAAUxB,KAAKyB,YAGZpB,y4CClDfqB,EAAAC,QAAA,CAAkBjC,WAAA","file":"component---src-pages-index-js-86523b6f63433cb67442.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"images/jumbo-shell.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 550) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Button } from 'antd'\nimport { Layout } from 'antd'\n\nimport SiteLayout from '../components/site-layout'\nimport Image from '../components/jumbo-shell-image'\nimport indexStyles from './index.module.css'\n\nconst { Content } = Layout\n\nconst IndexPage = ({ data }) => (\n  <SiteLayout>\n    <Content className={indexStyles.content}>\n      <h1>Hi people</h1>\n      <p>Welcome to your new Gatsby site.</p>\n      <p>Now go build something great.</p>\n      <div className={indexStyles.shellImage}>\n        <Image />\n      </div>\n      <ul>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <li>{node.frontmatter.title}</li>\n        ))}\n      </ul>\n      <Button>Default</Button>\n    </Content>\n  </SiteLayout>\n)\n\nexport const query = graphql`\n  query markdownQuery {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Layout, Affix } from 'antd'\n\nimport MainHeader from './main-header'\n\nimport './theme.less'\nimport mainStyles from './main.module.css'\n\nconst { Footer } = Layout\n\nconst SiteLayout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Layout className={mainStyles.layout}>\n          <MainHeader />\n          <Layout>{children}</Layout>\n          <Affix offsetBottom={0}>\n            <Footer>Footer</Footer>\n          </Affix>\n        </Layout>\n      </>\n    )}\n  />\n)\n\nSiteLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default SiteLayout\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shellImage\":\"index-module--shell-image--2wK5k\"};"],"sourceRoot":""}