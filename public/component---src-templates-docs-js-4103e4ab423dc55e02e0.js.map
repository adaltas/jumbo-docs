{"version":3,"sources":["webpack:///./src/components/docs-sider.js","webpack:///./src/components/docs-drawer.js","webpack:///./src/components/docs-hint-box.js","webpack:///./src/templates/docs.js"],"names":["Sider","Layout","DocsSider","_ref","id","docs","version","react_default","a","createElement","className","docsStyles","sider","width","docs_nav_version","docs_nav","DocsDrawer","state","visible","showDrawer","_this","setState","closeDrawer","render","drawerDiv","es_button","shape","type","onClick","this","drawerButton","icon","drawer","placement","closable","onClose","title","props","React","Component","ReactMarkdown","require","HintBox","warning","tip","info","box","join","theme","boxContent","source","text","defaultProps","__webpack_require__","d","__webpack_exports__","query","Content","renderAst","rehypeReact","components","hint-box","Compiler","DocTemplate","data","currentDoc","markdownRemark","allMarkdownRemark","docsVersion","site","siteMetadata","layout","docs_sider","docs_drawer","docsLayout","main_header","markdown","htmlAst"],"mappings":"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","file":"component---src-templates-docs-js-4103e4ab423dc55e02e0.js","sourcesContent":["import React from 'react'\nimport { Layout } from 'antd'\n\nimport DocsNav from './docs-nav'\nimport DocsNavVersion from './docs-nav-version'\n\nimport './theme.less'\nimport docsStyles from './docs.module.css'\n\nconst { Sider } = Layout\n\nconst DocsSider = ({ id, docs, version }) => (\n  <Sider className={docsStyles.sider} width={300}>\n    <DocsNavVersion version={version} />\n    <DocsNav id={id} docs={docs} />\n  </Sider>\n)\n\nexport default DocsSider\n","import React from 'react'\nimport { Button, Drawer, Icon } from 'antd'\n\nimport DocsNav from './docs-nav'\n\nimport './theme.less'\nimport docsStyles from './docs.module.css'\n\nclass DocsDrawer extends React.Component {\n  state = { visible: false }\n\n  showDrawer = () => {\n    this.setState({ visible: true })\n  }\n\n  closeDrawer = () => {\n    this.setState({ visible: false })\n  }\n\n  render() {\n    return (\n      <div className={docsStyles.drawerDiv}>\n        <Button\n          shape=\"circle\"\n          type=\"ghost\"\n          onClick={this.showDrawer}\n          className={docsStyles.drawerButton}\n        >\n          <Icon type=\"menu-unfold\" />\n        </Button>\n        <Drawer\n          placement=\"left\"\n          closable={false}\n          visible={this.state.visible}\n          onClose={this.closeDrawer}\n          title={'Jumbo Docs v' + this.props.version}\n        >\n          <DocsNav id={this.props.id} docs={this.props.docs} />\n        </Drawer>\n      </div>\n    )\n  }\n}\n\nexport default DocsDrawer\n","import React, { Component } from 'react'\nimport { Icon } from 'antd'\n\nimport docsStyles from '../components/docs.module.css'\n\nconst ReactMarkdown = require('react-markdown')\n\nclass HintBox extends Component {\n  static defaultProps = {\n    type: 'info',\n    text: '',\n  }\n\n  type = (function(type) {\n    switch (type) {\n      case 'warning':\n        return docsStyles.warning\n      case 'tip':\n        return docsStyles.tip\n      default:\n        return docsStyles.info\n    }\n  })(this.props.type)\n  icon = (type => {\n    switch (type) {\n      case 'warning':\n        return 'warning'\n      case 'tip':\n        return 'check-circle'\n      default:\n        return 'info-circle'\n    }\n  })(this.props.type)\n\n  render() {\n    return (\n      <div className={[docsStyles.box, this.type].join(' ')}>\n        <Icon type={this.icon} theme=\"filled\" className={docsStyles.icon} />\n        <span className={docsStyles.boxContent}>\n          <ReactMarkdown source={this.props.text} className={this.props.type} />\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default HintBox\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Layout } from 'antd'\nimport rehypeReact from 'rehype-react'\n\nimport DocsSider from '../components/docs-sider'\nimport MainHeader from '../components/main-header'\nimport DocsDrawer from '../components/docs-drawer'\nimport HintBox from '../components/docs-hint-box'\n\nimport docsStyles from '../components/docs.module.css'\n\nrequire('prismjs/themes/prism-tomorrow.css')\n\nconst { Content } = Layout\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: { 'hint-box': HintBox },\n}).Compiler\n\nconst DocTemplate = ({ data }) => {\n  const currentDoc = data.markdownRemark\n  const docs = data.allMarkdownRemark\n  const docsVersion = data.site.siteMetadata.version\n  return (\n    <Layout>\n      <DocsSider id={currentDoc.id} docs={docs} version={docsVersion} />\n      <DocsDrawer id={currentDoc.id} docs={docs} version={docsVersion} />\n      <Layout className={docsStyles.docsLayout}>\n        <MainHeader />\n        <Content>\n          <div className={docsStyles.markdown}>\n            {renderAst(currentDoc.htmlAst)}\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      id\n      frontmatter {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: frontmatter___sort }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            sort\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        version\n      }\n    }\n  }\n`\n\nexport default DocTemplate\n"],"sourceRoot":""}