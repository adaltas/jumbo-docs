{"version":3,"sources":["webpack:///./src/components/docs-sider.js","webpack:///./src/components/docs-drawer.js","webpack:///./src/templates/docs.js","webpack:///./src/components/docs.module.css"],"names":["Sider","Layout","DocsSider","_ref","id","react_default","a","createElement","gatsby_browser_entry","query","render","data","className","docsStyles","sider","menu","mode","selectedKeys","allMarkdownRemark","edges","map","_ref2","node","Item","key","to","fields","slug","frontmatter","title","_3230230794","DocsDrawer","drawerState","visible","getDrawerState","_this","showDrawer","showAlert","alert","closeDrawer","_this2","this","lib_radio","onClick","drawer","placement","closable","onClose","props","_2273923502","React","Component","__webpack_require__","d","__webpack_exports__","Content","DocTemplate","doc","markdownRemark","layout","docs_drawer","docs_sider","main_header","dangerouslySetInnerHTML","__html","html","module","exports"],"mappings":"4LAOQA,EAAUC,IAAVD,MAmCOE,EAjCG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAH,OAChBC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAiBLC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAACP,EAAD,CAAOY,UAAWC,IAAWC,OAC3BT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,KAAK,SAASC,aAAc,CAACb,IAChCO,EAAKO,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCjB,EAAAC,EAAAC,cAACQ,EAAA,EAAKQ,KAAN,CAAWC,IAAKF,EAAKlB,IACnBC,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMiB,GAAI,IAAMH,EAAKI,OAAOC,MAAOL,EAAKM,YAAYC,aAvBhElB,KAAAmB,yDCgEaC,sJAlEbC,YAAc,CAAEC,SAAS,KAEzBC,eAAiB,WACf,OAAOC,EAAKH,eAGdI,WAAa,WACXD,EAAKH,YAAc,CAAEC,SAAS,GAC9BE,EAAKE,eAGPA,UAAY,WACVC,MAAMH,EAAKH,YAAYC,YAGzBM,YAAc,WACZJ,EAAKH,YAAc,CAAEC,SAAS,GAC9BE,EAAKE,2CAGP3B,kBAAS,IAAA8B,EAAAC,KACP,OACEpC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAiBLC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,OAAD,CAAQC,QAASH,EAAKJ,YAAtB,QACA/B,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACEC,UAAU,MACVC,UAAU,EACVb,QAASO,EAAKN,iBAAiBD,QAC/Bc,QAASP,EAAKD,aAEdlC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,KAAK,SAASC,aAAc,CAACuB,EAAKQ,MAAM5C,KAC3CO,EAAKO,kBAAkBC,MAAMC,IAAI,SAAAjB,GAAA,IAAGmB,EAAHnB,EAAGmB,KAAH,OAChCjB,EAAAC,EAAAC,cAACQ,EAAA,EAAKQ,KAAN,CAAWC,IAAKF,EAAKlB,IACnBC,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMiB,GAAI,IAAMH,EAAKI,OAAOC,MACzBL,EAAKM,YAAYC,cA/BlClB,KAAAsC,QAvBmBC,IAAMC,WCP/BC,EAAAC,EAAAC,EAAA,0BAAA7C,QAQQ8C,EAAYtD,IAAZsD,QAqBK9C,EAAK,aAYH+C,UA/BK,SAAArD,GAAc,IAC1BsD,EAD0BtD,EAAXQ,KACJ+C,eACjB,OACErD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACEtD,EAAAC,EAAAC,cAACqD,EAAD,CAAYxD,GAAIqD,EAAIrD,KACpBC,EAAAC,EAAAC,cAACsD,EAAD,MACAxD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACEtD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,MACAzD,EAAAC,EAAAC,cAACgD,EAAD,KACElD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKkD,EAAI7B,YAAYC,OACrBxB,EAAAC,EAAAC,cAAA,OAAKwD,wBAAyB,CAAEC,OAAQP,EAAIQ,wcCpBxDC,EAAAC,QAAA,CAAkBrD,MAAA","file":"component---src-templates-docs-js-1a2d08afc46f56421c47.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport { Layout, Menu } from 'antd'\n\nimport './theme.less'\nimport docsStyles from './docs.module.css'\n\nconst { Sider } = Layout\n\nconst DocsSider = ({ id }) => (\n  <StaticQuery\n    query={graphql`\n      query markdownQuerySider {\n        allMarkdownRemark {\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Sider className={docsStyles.sider}>\n        <Menu mode=\"inline\" selectedKeys={[id]}>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <Menu.Item key={node.id}>\n              <Link to={'/' + node.fields.slug}>{node.frontmatter.title}</Link>\n            </Menu.Item>\n          ))}\n        </Menu>\n      </Sider>\n    )}\n  />\n)\n\nexport default DocsSider\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport { Drawer, Menu } from 'antd'\n\nimport './theme.less'\nimport { Button } from 'antd/lib/radio'\n\nclass DocsDrawer extends React.Component {\n  drawerState = { visible: false }\n\n  getDrawerState = () => {\n    return this.drawerState\n  }\n\n  showDrawer = () => {\n    this.drawerState = { visible: true }\n    this.showAlert()\n  }\n\n  showAlert = () => {\n    alert(this.drawerState.visible)\n  }\n\n  closeDrawer = () => {\n    this.drawerState = { visible: false }\n    this.showAlert()\n  }\n\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query markdownQueryDrawer {\n            allMarkdownRemark {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <div>\n            <Button onClick={this.showDrawer}>Open</Button>\n            <Drawer\n              placement=\"top\"\n              closable={false}\n              visible={this.getDrawerState().visible}\n              onClose={this.closeDrawer}\n            >\n              <Menu mode=\"inline\" selectedKeys={[this.props.id]}>\n                {data.allMarkdownRemark.edges.map(({ node }) => (\n                  <Menu.Item key={node.id}>\n                    <Link to={'/' + node.fields.slug}>\n                      {node.frontmatter.title}\n                    </Link>\n                  </Menu.Item>\n                ))}\n              </Menu>\n            </Drawer>\n          </div>\n        )}\n      />\n    )\n  }\n}\n\nexport default DocsDrawer\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Layout } from 'antd'\n\nimport DocsSider from '../components/docs-sider'\nimport MainHeader from '../components/main-header'\nimport DocsDrawer from '../components/docs-drawer'\n\nconst { Content } = Layout\n\nconst DocTemplate = ({ data }) => {\n  const doc = data.markdownRemark\n  return (\n    <Layout>\n      <DocsDrawer id={doc.id} />\n      <DocsSider />\n      <Layout>\n        <MainHeader />\n        <Content>\n          <div>\n            <h1>{doc.frontmatter.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: doc.html }} />\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      id\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n\nexport default DocTemplate\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"docs-module--sider--2K7gh\"};"],"sourceRoot":""}