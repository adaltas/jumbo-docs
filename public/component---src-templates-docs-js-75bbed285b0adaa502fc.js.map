{"version":3,"sources":["webpack:///./src/components/docs-nav.js","webpack:///./src/components/docs-sider.js","webpack:///./src/components/docs-drawer.js","webpack:///./src/templates/docs.js","webpack:///./src/components/docs.module.css"],"names":["DocsNav","_ref","id","react_default","a","createElement","gatsby_browser_entry","query","render","data","menu","mode","selectedKeys","allMarkdownRemark","edges","map","_ref2","node","Item","key","to","fields","slug","frontmatter","title","_1303433546","Sider","Layout","DocsSider","className","docsStyles","sider","docs_nav","DocsDrawer","state","visible","showDrawer","_this","setState","closeDrawer","drawer","affix","offsetTop","es_button","shape","type","drawerButton","onClick","this","icon","placement","closable","onClose","props","React","Component","__webpack_require__","d","__webpack_exports__","Content","DocTemplate","doc","markdownRemark","layout","docs_sider","docs_drawer","main_header","dangerouslySetInnerHTML","__html","html","module","exports"],"mappings":"iKAqCeA,UA/BC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAH,OACdC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAiBLC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,KAAK,SAASC,aAAc,CAACV,IAChCO,EAAKI,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCd,EAAAC,EAAAC,cAACK,EAAA,EAAKQ,KAAN,CAAWC,IAAKF,EAAKf,IACnBC,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMc,GAAI,IAAMH,EAAKI,OAAOC,MAAOL,EAAKM,YAAYC,YAtB9Df,KAAAgB,wBCCMC,EAAUC,IAAVD,MAQOE,EANG,SAAA3B,GAAA,IAAGC,EAAHD,EAAGC,GAAH,OAChBC,EAAAC,EAAAC,cAACqB,EAAD,CAAOG,UAAWC,IAAWC,OAC3B5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAS9B,GAAIA,mECiCF+B,sJApCbC,MAAQ,CAAEC,SAAS,KAEnBC,WAAa,WACXC,EAAKC,SAAS,CAAEH,SAAS,OAG3BI,YAAc,WACZF,EAAKC,SAAS,CAAEH,SAAS,mCAG3B3B,kBACE,OACEL,EAAAC,EAAAC,cAAA,OAAKwB,UAAWC,IAAWU,QACzBrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAOC,UAAW,IAChBvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEC,MAAM,SACNC,KAAK,QACLhB,UAAWC,IAAWgB,aACtBC,QAASC,KAAKZ,YAEdjC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAMJ,KAAK,kBAGf1C,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEU,UAAU,OACVC,UAAU,EACVhB,QAASa,KAAKd,MAAMC,QACpBiB,QAASJ,KAAKT,aAEdpC,EAAAC,EAAAC,cAAC2B,EAAD,CAAS9B,GAAI8C,KAAKK,MAAMnD,WA9BToD,IAAMC,WCR/BC,EAAAC,EAAAC,EAAA,0BAAAnD,QAQQoD,EAAYhC,IAAZgC,QAqBKpD,EAAK,aAYHqD,UA/BK,SAAA3D,GAAc,IAC1B4D,EAD0B5D,EAAXQ,KACJqD,eACjB,OACE3D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,KACE5D,EAAAC,EAAAC,cAAC2D,EAAD,CAAW9D,GAAI2D,EAAI3D,KACnBC,EAAAC,EAAAC,cAAC4D,EAAD,CAAY/D,GAAI2D,EAAI3D,KACpBC,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,KACE5D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,MACA/D,EAAAC,EAAAC,cAACsD,EAAD,KACExD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKwD,EAAItC,YAAYC,OACrBrB,EAAAC,EAAAC,cAAA,OAAK8D,wBAAyB,CAAEC,OAAQP,EAAIQ,kCCpBxDC,EAAAC,QAAA,CAAkBzB,aAAA,oCAAAf,MAAA,4BAAAS,OAAA","file":"component---src-templates-docs-js-75bbed285b0adaa502fc.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport { Menu } from 'antd'\n\nimport './theme.less'\n\nconst DocsNav = ({ id }) => (\n  <StaticQuery\n    query={graphql`\n      query markdownQueryDrawer {\n        allMarkdownRemark {\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Menu mode=\"inline\" selectedKeys={[id]}>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <Menu.Item key={node.id}>\n            <Link to={'/' + node.fields.slug}>{node.frontmatter.title}</Link>\n          </Menu.Item>\n        ))}\n      </Menu>\n    )}\n  />\n)\n\nexport default DocsNav\n","import React from 'react'\nimport { Layout } from 'antd'\n\nimport DocsNav from './docs-nav'\n\nimport './theme.less'\nimport docsStyles from './docs.module.css'\n\nconst { Sider } = Layout\n\nconst DocsSider = ({ id }) => (\n  <Sider className={docsStyles.sider}>\n    <DocsNav id={id} />\n  </Sider>\n)\n\nexport default DocsSider\n","import React from 'react'\nimport { Button, Affix, Drawer, Icon } from 'antd'\n\nimport DocsNav from './docs-nav'\n\nimport './theme.less'\nimport docsStyles from './docs.module.css'\n\nclass DocsDrawer extends React.Component {\n  state = { visible: false }\n\n  showDrawer = () => {\n    this.setState({ visible: true })\n  }\n\n  closeDrawer = () => {\n    this.setState({ visible: false })\n  }\n\n  render() {\n    return (\n      <div className={docsStyles.drawer}>\n        <Affix offsetTop={74}>\n          <Button\n            shape=\"circle\"\n            type=\"ghost\"\n            className={docsStyles.drawerButton}\n            onClick={this.showDrawer}\n          >\n            <Icon type=\"menu-unfold\" />\n          </Button>\n        </Affix>\n        <Drawer\n          placement=\"left\"\n          closable={false}\n          visible={this.state.visible}\n          onClose={this.closeDrawer}\n        >\n          <DocsNav id={this.props.id} />\n        </Drawer>\n      </div>\n    )\n  }\n}\n\nexport default DocsDrawer\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Layout } from 'antd'\n\nimport DocsSider from '../components/docs-sider'\nimport MainHeader from '../components/main-header'\nimport DocsDrawer from '../components/docs-drawer'\n\nconst { Content } = Layout\n\nconst DocTemplate = ({ data }) => {\n  const doc = data.markdownRemark\n  return (\n    <Layout>\n      <DocsSider id={doc.id} />\n      <DocsDrawer id={doc.id} />\n      <Layout>\n        <MainHeader />\n        <Content>\n          <div>\n            <h1>{doc.frontmatter.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: doc.html }} />\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      id\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n\nexport default DocTemplate\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawerButton\":\"docs-module--drawer-button--2Ausd\",\"sider\":\"docs-module--sider--2K7gh\",\"drawer\":\"docs-module--drawer--2BfIC\"};"],"sourceRoot":""}