{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/main-footer.js","webpack:///./src/components/site-layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_site_layout__WEBPACK_IMPORTED_MODULE_1__","SecondPage","a","createElement","href","Footer","Layout","MainFooter","react_default","className","mainStyles","footer","width","Content","SiteLayout","_ref","children","gatsby_browser_entry","query","render","data","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","layout","main_header","main_footer","_3892401927","propTypes","PropTypes","node","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KA+BeO,UA3BI,kBACjBH,EAAAI,EAAAC,cAACH,EAAA,EAAD,KACEF,EAAAI,EAAAC,cAAA,qCACAL,EAAAI,EAAAC,cAAA,WACEL,EAAAI,EAAAC,cAAA,gEAEEL,EAAAI,EAAAC,cAAA,KAAGC,KAAK,8DAAR,yBAFF,MAOAN,EAAAI,EAAAC,cAAA,kBACEL,EAAAI,EAAAC,cAAA,iKAGW,IACTL,EAAAI,EAAAC,cAAA,uFAONL,EAAAI,EAAAC,cAAA,iRClBIE,EAAWC,IAAXD,OAQOE,EANI,kBACjBC,EAAAN,EAAAC,cAACE,EAAD,CAAQI,UAAWC,IAAWC,OAAQC,MAAO,KAA7C,iBCAMC,EAAYP,IAAZO,QAEFC,EAAa,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACjBR,EAAAN,EAAAC,cAACc,EAAA,YAAD,CACEC,MAAK,aASLC,OAAQ,SAAAC,GAAI,OACVZ,EAAAN,EAAAC,cAAAK,EAAAN,EAAAmB,SAAA,KACEb,EAAAN,EAAAC,cAACmB,EAAApB,EAAD,CACEqB,MAAOH,EAAKI,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS,UAChC,CAAED,KAAM,WAAYC,QAAS,uBAG/BpB,EAAAN,EAAAC,cAAA,QAAM0B,KAAK,QAEbrB,EAAAN,EAAAC,cAAC2B,EAAA,EAAD,CAAQrB,UAAWC,IAAWoB,QAC5BtB,EAAAN,EAAAC,cAAC4B,EAAA,EAAD,MACAvB,EAAAN,EAAAC,cAAC2B,EAAA,EAAD,KACEtB,EAAAN,EAAAC,cAACU,EAAD,KAAUG,KAGdR,EAAAN,EAAAC,cAAC6B,EAAD,QA3BNZ,KAAAa,KAiCFnB,EAAWoB,UAAY,CACrBlB,SAAUmB,IAAUC,KAAKC,YAGZvB","file":"component---src-pages-about-js-4269df8adaaae527f566.js","sourcesContent":["import React from 'react'\n\nimport SiteLayout from '../components/site-layout'\n\nconst SecondPage = () => (\n  <SiteLayout>\n    <h1>Richard Hamming on Luck</h1>\n    <div>\n      <p>\n        From Richard Hamming’s classic and must-read talk, “\n        <a href=\"http://www.cs.virginia.edu/~robins/YouAndYourResearch.html\">\n          You and Your Research\n        </a>\n        ”.\n      </p>\n      <blockquote>\n        <p>\n          There is indeed an element of luck, and no, there isn’t. The prepared\n          mind sooner or later finds something important and does it. So yes, it\n          is luck.{' '}\n          <em>\n            The particular thing you do is luck, but that you do something is\n            not.\n          </em>\n        </p>\n      </blockquote>\n    </div>\n    <p>Posted April 09, 2011</p>\n  </SiteLayout>\n)\n\nexport default SecondPage\n","import React from 'react'\nimport { Layout } from 'antd'\n\nimport DocsNav from './docs-nav'\nimport DocsNavVersion from './docs-nav-version'\n\nimport './theme.less'\nimport mainStyles from './main.module.css'\n\nconst { Footer } = Layout\n\nconst MainFooter = () => (\n  <Footer className={mainStyles.footer} width={300}>\n    Adaltas 2019\n  </Footer>\n)\n\nexport default MainFooter\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Layout } from 'antd'\n\nimport MainHeader from './main-header'\nimport MainFooter from './main-footer'\n\nimport './theme.less'\nimport mainStyles from './main.module.css'\n\nconst { Content } = Layout\n\nconst SiteLayout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Layout className={mainStyles.layout}>\n          <MainHeader />\n          <Layout>\n            <Content>{children}</Content>\n          </Layout>\n        </Layout>\n        <MainFooter />\n      </>\n    )}\n  />\n)\n\nSiteLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default SiteLayout\n"],"sourceRoot":""}