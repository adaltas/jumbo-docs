{"version":3,"sources":["webpack:///./src/components/jumbo-shell-image.js","webpack:///./src/pages/index.js","webpack:///./src/components/site-layout.js","webpack:///./src/pages/index.module.css"],"names":["Image","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2449412146","__webpack_require__","d","__webpack_exports__","IndexPage","_ref","site_layout","className","indexStyles","shellImage","jumbo_shell_image","es_button","Content","Layout","Footer","SiteLayout","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","site","siteMetadata","meta","name","content","lang","antd__WEBPACK_IMPORTED_MODULE_5__","mainStyles","layout","_main_header__WEBPACK_IMPORTED_MODULE_7__","antd__WEBPACK_IMPORTED_MODULE_6__","offsetBottom","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","node","isRequired","module","exports"],"mappings":"2KA+BeA,EAhBD,kBACZC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAKO,MAAOF,EAAKG,iBAAiBC,gBAAgBF,SAZpEF,KAAAK,uBChBFC,EAAAC,EAAAC,EAAA,0BAAAV,IAQA,IAYaA,EAAK,aAiBHW,UA7BG,SAAAC,KAAGV,KAAH,OAChBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACEjB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAYC,YAC1BpB,EAAAC,EAAAC,cAACmB,EAAD,OAEFrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,kLCLIC,EAAoBC,IAApBD,QAASE,EAAWD,IAAXC,OAEXC,EAAa,SAAAV,GAAA,IAAGW,EAAHX,EAAGW,SAAH,OACjBC,EAAA3B,EAAAC,cAAC2B,EAAA,YAAD,CACEzB,MAAK,aASLC,OAAQ,SAAAC,GAAI,OACVsB,EAAA3B,EAAAC,cAAA0B,EAAA3B,EAAA6B,SAAA,KACEF,EAAA3B,EAAAC,cAAC6B,EAAA9B,EAAD,CACE+B,MAAO1B,EAAK2B,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS,UAChC,CAAED,KAAM,WAAYC,QAAS,uBAG/BT,EAAA3B,EAAAC,cAAA,QAAMoC,KAAK,QAEbV,EAAA3B,EAAAC,cAACqC,EAAA,EAAD,CAAQrB,UAAWsB,IAAWC,QAC5Bb,EAAA3B,EAAAC,cAACwC,EAAA,EAAD,MACAd,EAAA3B,EAAAC,cAACqC,EAAA,EAAD,KACEX,EAAA3B,EAAAC,cAACqB,EAAD,CAASL,UAAWsB,IAAWH,SAAUV,IAE3CC,EAAA3B,EAAAC,cAACyC,EAAA,EAAD,CAAOC,aAAc,GACnBhB,EAAA3B,EAAAC,cAACuB,EAAD,mBA3BVnB,KAAAuC,KAmCFnB,EAAWoB,UAAY,CACrBnB,SAAUoB,IAAUC,KAAKC,YAGZvB,y4CCpDfwB,EAAAC,QAAA,CAAkB/B,WAAA","file":"component---src-pages-index-js-e48d3ca9dc029a16345a.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"images/jumbo-shell.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 550) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Button } from 'antd'\n\nimport SiteLayout from '../components/site-layout'\nimport Image from '../components/jumbo-shell-image'\nimport indexStyles from './index.module.css'\n\nconst IndexPage = ({ data }) => (\n  <SiteLayout>\n    <h1>Hi people</h1>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <div className={indexStyles.shellImage}>\n      <Image />\n    </div>\n    <Button>Default</Button>\n  </SiteLayout>\n)\n\nexport const query = graphql`\n  query markdownQuery {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Layout, Affix } from 'antd'\n\nimport MainHeader from './main-header'\n\nimport './theme.less'\nimport mainStyles from './main.module.css'\n\nconst { Content, Footer } = Layout\n\nconst SiteLayout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Layout className={mainStyles.layout}>\n          <MainHeader />\n          <Layout>\n            <Content className={mainStyles.content}>{children}</Content>\n          </Layout>\n          <Affix offsetBottom={0}>\n            <Footer>Footer</Footer>\n          </Affix>\n        </Layout>\n      </>\n    )}\n  />\n)\n\nSiteLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default SiteLayout\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shellImage\":\"index-module--shell-image--2wK5k\"};"],"sourceRoot":""}